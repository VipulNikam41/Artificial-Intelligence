# -*- coding: utf-8 -*-
"""Untitled5.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1FgbH7TxM7HdVhH0VXeWo8Ny1hZG8tpdw
"""

from google.colab import files
uploaded = files.upload()

import numpy as np
data = np.genfromtxt("spambase.data", delimiter=",", skip_header=0)
data

feature=data[0:,0:-1]
feature

result=data[0:,-1:]
resultdim=result.reshape(-1)
print(resultdim.shape)
print(resultdim)

from sklearn.model_selection import train_test_split

# Split dataset into training set and test set
X_train, X_test, y_train, y_test = train_test_split(feature, resultdim, test_size=0.3,random_state=109)
print(X_train)
print(X_train.shape)
print(y_train.shape)
print(y_train)

from sklearn import svm
from sklearn import metrics
aray=[0.01,0.10,1.00,10.00,100.00,1000.00]
#Create a svm Classifier
for i in aray:
  clf = svm.SVC(C=i,kernel='linear') # Linear Kernel
  #Train the model using the training sets
  clf.fit(X_train, y_train)
  y_pred = clf.predict(X_test)
  print("Accuracy:",metrics.accuracy_score(y_test, y_pred))

aray=[0.01,0.10,1.00,10.00,100.00,1000.00,10000.00,100000.00,1000000.00,10000000.00]
for i in aray:
  clf = svm.SVC(C=i,kernel='rbf') # Linear Kernel
  #Train the model using the training sets
  clf.fit(X_train, y_train)
  y_pred = clf.predict(X_test)
  print("Accuracy:",metrics.accuracy_score(y_test, y_pred))

#from sklearn import svm
#from sklearn import metrics
aray=[0.01,0.10,1.00,10.00,100.00,1000.00,10000.00,100000.00,1000000.00,10000000.00,100000000.00,1000000000.00,10000000000.00]
#Create a svm Classifier
for i in aray:
  clf = svm.SVC(C=i,kernel='poly',degree=2) # Linear Kernel
  #Train the model using the training sets
  clf.fit(X_train, y_train)
  y_pred = clf.predict(X_test)
  print("Accuracy:",metrics.accuracy_score(y_test, y_pred))